---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Creates a small Landingzone with VPC, Networking and Instance"

Parameters:
  VPCCIDRAddr:
    Type: "String"
    Description: "CIDR Address for the VPC"
    Default: "10.0.0.0/16"
  PublicSubnetAZ:
    Type: "AWS::EC2::AvailabilityZone::Name"
    Description: "The Availability Zone for the public subnet"
    Default: "us-east-1a"
  PrivateSubnetAZ:
    Type: "AWS::EC2::AvailabilityZone::Name"
    Description: "The Availability Zone for the private subnet"
    Default: "us-east-1b"
  PublicSubnetCIDR:
    Type: "String"
    Description: "CIDR Address for the public subnet"
    Default: "10.0.1.0/24"
  PrivateSubnetCIDR:
    Type: "String"
    Description: "CIDR Address for the private subnet"
    Default: "10.0.2.0/24"
  InstanceAMI:
    Type: "AWS::EC2::Image::Id"
    Description: "AMI ID to use for the instance"
    Default: "ami-0557a15b87f6559cf"
  InstanceType:
    Type: "String"
    Description: "Instance Type"
    Default: "t2.micro"
  PubKey:
    Type: "String"
    Description: "Public Key Material for SSH"
    Default: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDttlPdTIG5+yllaxSTayJZmLDzo35sxRrhA+5uGZP6x/5RGt/vtfSkWgyHkCCBYMa9T/s3T7QDkYHEGi5ob2r2qkEXjhnY+P/OUHZ38gR5B5uAbvQ+yqL1qb0mfBl+TdjCU/5GrN5PjpJvHY1F6P7wNyQMH/+437xz+Xdlt4uKvc4ED4fJISwwDmmmONQQZQ6uljD2PAq5FotJnle6b3a4KP/laM6VI66ELZTqFcjMw7/orviEvHNlFjgeLHTU5bmHJHo2GDb6U7D47N1Dby3flT8rFvPbZ4N2A+1F1eW6FGD5bYcaTcSDD5oldlOo4lrAVpknV9qm9cyMiNN3Zla1"

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCIDRAddr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "MyVPC"

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDR
      AvailabilityZone: !Ref PublicSubnetAZ
      Tags:
        - Key: "Name"
          Value: "PublicSubnet"
  
  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCIDR
      AvailabilityZone: !Ref PrivateSubnetAZ
      Tags:
        - Key: "Name"
          Value: "PrivateSubnet"
  
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "InternetGateway"
  
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  RouteTablePublic:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "RouteTablePublic"
  
  RoutePublic:
    Type: "AWS::EC2::Route"
    DependsOn: "AttachGateway"
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
  
  AssociatePublic:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTablePublic

  KeyPair:
    Type: "AWS::EC2::KeyPair"
    Properties:
      KeyName: "MyKeyPair"
      PublicKeyMaterial: !Ref PubKey
      Tags:
        - Key: "Name"
          Value: "MyKeyPair"
  
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref InstanceAMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPair
      NetworkInterfaces:
        - DeviceIndex: "0"
          AssociatePublicIpAddress: true
          GroupSet:
            - !Ref InstanceSecurityGroupIngress
            - !Ref InstanceSecurityGroupEgress
          SubnetId: !Ref PublicSubnet
      Tags:
        - Key: "Name"
          Value: "MyEC2Instance"
  
  InstanceSecurityGroupIngress:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow ingress to instance"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: "Name"
          Value: "IngressSG"

  InstanceSecurityGroupEgress:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow egress from Instance"
      VpcId: !Ref VPC
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"
      Tags:
        - Key: "Name"
          Value: "EgressSG"

Outputs:
  InstancePublicIP:
    Value: !GetAtt EC2Instance.PublicIp
    Description: "Public IP address of the EC2 instance"
  InstancePublicDNSName:
    Value: !GetAtt EC2Instance.PublicDnsName
    Description: "Public DNS name of the EC2 instance"